datasource db {
  provider = "postgresql" // or your preferred database provider
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")

  files     File[]

  @@map("users")
}

model File {
  id               Int        @id @default(autoincrement())
  userId           Int        @map("user_id")
  originalFilename String     @map("original_filename")
  storagePath      String     @map("storage_path")
  title            String?
  description      String?
  status           FileStatus @default(UPLOADED)
  extractedData    String?    @map("extracted_data")
  uploadedAt       DateTime   @default(now()) @map("uploaded_at")

  user             User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  jobs             Job[]

  @@map("files")
}

model Job {
  id           Int       @id @default(autoincrement())
  fileId       Int       @map("file_id")
  jobType      String?   @map("job_type")
  status       JobStatus
  errorMessage String?   @map("error_message")
  startedAt    DateTime? @map("started_at")
  completedAt  DateTime? @map("completed_at")

  file         File      @relation(fields: [fileId], references: [id], onDelete: Cascade)

  @@map("jobs")
}

enum FileStatus {
  UPLOADED
  PROCESSING
  PROCESSED
  FAILED
}

enum JobStatus {
  QUEUED
  PROCESSING
  COMPLETED
  FAILED
}